
---
# Source: kubefed/charts/controllermanager/templates/webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  namespace: ${FED_NS}
  name: kubefed-admission-webhook-serving-cert
type: kubernetes.io/tls
stringData:
  tls.crt: "-----BEGIN CERTIFICATE-----\nMIIDiTCCAnGgAwIBAgIQYfv1vGiS9Fy9Wh6fzsE5gjANBgkqhkiG9w0BAQsFADAn\nMSUwIwYDVQQDExxrdWJlZmVkLWFkbWlzc2lvbi13ZWJob29rLWNhMB4XDTIwMDgx\nMDA4MDUxNloXDTMwMDgwODA4MDUxNlowJDEiMCAGA1UEAxMZa3ViZWZlZC1hZG1p\nc3Npb24td2ViaG9vazCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMl9\nTiM5FjCXgSMdkn/hFYxJHD20QbUIHKFeWyUdeHosj0j5vGnWeXNO1tLcxsOfCT8m\n4iV7Tobt2htDZ2j2VgLEQnsMmrGMSgJYhOIG0XVk8rQCzEv1roxs3GEs/pAe1hgz\nXRvZatO/iW0c98FqYglVwdhRMczEmOzPBMagmiUa1PGlFwIV2zJTLGoVIAiUgUTK\nJbfB8VuOZ9PCygEwUkqkcDubojrteSPspjePDYoZhKIYEI+Vru5Iph/6VWnppOgI\nYZ3kOKF6aJoH9mVzwEexM0K3knBE54z9aUzdAubQTPmn3Q5hWwdasUoLgSVuuKDk\nMdS6zE3Kssp7rXTUdusCAwEAAaOBszCBsDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0l\nBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwcQYDVR0RBGow\naIIwa3ViZWZlZC1hZG1pc3Npb24td2ViaG9vay5rdWJlLWZlZGVyYXRpb24tc3lz\ndGVtgjRrdWJlZmVkLWFkbWlzc2lvbi13ZWJob29rLmt1YmUtZmVkZXJhdGlvbi1z\neXN0ZW0uc3ZjMA0GCSqGSIb3DQEBCwUAA4IBAQCy+yA+0JBPIbbJ7yc/wPxmZLHD\nOvzhZZCyvyyjAdfBlldTbRg0ERD7gDxD51hu2zKCMUTmPiWDAKR75mCizTDt5gKK\nG+IizimFzVilTZM/CCoA6kQ30OcptpP+aAVuZn1/RClwdSsB9yoPMRKboAQq7kJK\nuFCNvKtgaVEO/FnhQ4xmb0xKBrsoJB4I1UvyvJP1GWG+zGlRIkF3ylNPmeHtOImK\nNhcR1ly54IUbrzAjnF/bWuFba+hYcgtwoTEpL0WNO13HBcDOiwa08CJpaRSSjFpq\noTHDJPkJJ7rLkNEvjQqwjXOs1q1b7IJ2QhT07maMQfAnjHFhF7Z/W2UL73v5\n-----END CERTIFICATE-----\n"
  tls.key: "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAyX1OIzkWMJeBIx2Sf+EVjEkcPbRBtQgcoV5bJR14eiyPSPm8\nadZ5c07W0tzGw58JPybiJXtOhu3aG0NnaPZWAsRCewyasYxKAliE4gbRdWTytALM\nS/WujGzcYSz+kB7WGDNdG9lq07+JbRz3wWpiCVXB2FExzMSY7M8ExqCaJRrU8aUX\nAhXbMlMsahUgCJSBRMolt8HxW45n08LKATBSSqRwO5uiOu15I+ymN48NihmEohgQ\nj5Wu7kimH/pVaemk6AhhneQ4oXpomgf2ZXPAR7EzQreScETnjP1pTN0C5tBM+afd\nDmFbB1qxSguBJW64oOQx1LrMTcqyynutdNR26wIDAQABAoIBABUpTuKOJVF3J/3r\nJi6+EghIyWmFm/0KXA9qnIH6ZWPXeDj+2ZX4C4tbtV4yB8IV2t/CErBDEg1Dv8tr\nOdohPQlPWXgY68pH5KH4cARZGPiOYJsdTB2SMQHYkRC3rAiw5GVoR5gcLocMr79A\n8phitucqFZDFfkh2QWVlnKfLyESrLAIlsCTA3TCkLybVlcbQfCaoJmzkUnK2W8IR\nRmcl+OonjuCmF1Tpn2EeZ77IVM+R1uVc5TdTTY9gxSY79AysFr64335dhvSMuf0i\nux9rUe0llR8BIUm3bEQo2gM8Hj7dcqf4zcnpq0+7ZnnyhHNyt1Y3IAf/tAJxkGZi\nf5z1y7ECgYEA7CS0LFdZMpQw7afNjPCKgH48S5rZmwFpQg823U4yQPfIJzQ6qx0Q\nlNbMX4k5Bjnblb1vG49UkLm+oL2yHYdfM2PrrrVjSf4DWq+k5W5nitT/tX1Ysy1y\nf9L5je/bwTP/0hHyyVeK2BVbNafz4pU3Qe2tXKNzksGzY0T5X2dZnVMCgYEA2m6h\ndh/lFvNnUgY0NiIu3NeAwcl+LPR3ZrDoS3OQdRIgfwaGRUvfVe+OaO3I29aiMDvi\nskS1IKJ4OR6Mt6g3hkbeiot7o4r3dkjUpPNi5Jwuj8ms93q73eeSfGf41UgB2ma9\n5pKFPHyXEv8ANcqtj0mIDaWgyRHj8+q3FPs9dQkCgYEAgmvzJtpHZWv7agbXvBPO\nKxGNc6ReswGghN+qSag6kS9I2H48OO2gjtPjpJBBcnLaGGW7y9jpt9Uet+CNU0nF\nBrkVHjUIVYF5kMiZpi3H+iGR6UcFilB7gKWhNwdWs+poTDmlghZblOSWr5fHV0la\nb4s5yIRt/IwG67jYkhyengkCgYAWZOc61BRJoRTDrQ0nS6PgUlvKAl1kQIAJUDPQ\noH178yrPuxyC+D9icRf5m/9OwpeIOGuKeU7UlLOcr4wfvChNJPDl5Vz8rF+oidj7\nPFS0OWrwpO2NxdCC9J3pEUPKogJGoOfxPq5YQDHA6dHcsfXPTeub8pIkaygitrqk\ndQmc+QKBgQDmvFQIn7iglhTh9WhBQV/H9nQ/O8Vfw5K9cL3JvyukQ0fAXgZQcR0k\ncrDjxu+ggIQfJJrBS1K1eQEhNfbXpcJ4LpV2tEhQiC/NT7Cn7jo4hNOxQWw6VFp8\n+VTQEzZHzy/PUNPYB/j0Y28ZNW/8NtX5Xc4SnSqsPCRuNM/ykSAo5g==\n-----END RSA PRIVATE KEY-----\n"
---
# Source: kubefed/charts/controllermanager/templates/serviceaccounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubefed-controller
  namespace: ${FED_NS}
---
# Source: kubefed/charts/controllermanager/templates/serviceaccounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: ${FED_NS}
  name: kubefed-admission-webhook
---
# Source: kubefed/charts/controllermanager/templates/aggregate_clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    api: kubefed
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kubefed-admin
rules:
- apiGroups:
  - multiclusterdns.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - scheduling.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - types.kubefed.io
  resources:
  - '*'
  verbs:
  - '*'
---
# Source: kubefed/charts/controllermanager/templates/aggregate_clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    api: kubefed
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kubefed-view
rules:
- apiGroups:
  - scheduling.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - multiclusterdns.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - types.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
---
# Source: kubefed/charts/controllermanager/templates/aggregate_clusterroles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    api: kubefed
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: kubefed-edit
rules:
- apiGroups:
  - scheduling.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - update
  - create
  - update
  - delete
- apiGroups:
  - multiclusterdns.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
- apiGroups:
  - types.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
---
# Source: kubefed/charts/controllermanager/templates/clusterrole.yaml
# This role provides the necessary permissions to create admission reviews.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
# TODO(font) For namespace scoped deployments, create a unique cluster-scoped
# resource name using the namespace. This is needed because helm does not
# currently support the ability to share resources across multiple
# installations of the same chart. Additionally, admission-webhooks do not
# currently support the ability to have namespace-scoped RBAC permissions only.
  name: system:kubefed:admission-requester

rules:
- apiGroups:
  - validation.core.kubefed.io
  resources:
  - federatedtypeconfigs
  - kubefedclusters
  - kubefedconfigs
  verbs:
  - create
- apiGroups:
  - mutation.core.kubefed.io
  resources:
  - kubefedconfigs
  verbs:
  - create
---
# Source: kubefed/charts/controllermanager/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    api: kubefed
    kubebuilder.k8s.io: 1.0.0
  name: kubefed-role
rules:
- apiGroups:
  - scheduling.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - update
- apiGroups:
  - multiclusterdns.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
  - delete
- apiGroups:
  - core.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - create
  - update
- apiGroups:
  - types.kubefed.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - create
  - update
  - patch
---
# Source: kubefed/charts/controllermanager/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubefed-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubefed-role
subjects:
- kind: ServiceAccount
  name: kubefed-controller
  namespace: ${FED_NS}
---
# Source: kubefed/charts/controllermanager/templates/clusterrolebindings.yaml
# This clusterrolebinding grants permissions for the admission webhook to create
# admission reviews on behalf of the system:anonymous user.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
# TODO(font) For namespace scoped deployments, create a unique cluster-scoped
# resource name using the namespace. This is needed because helm does not
# currently support the ability to share resources across multiple
# installations of the same chart. Additionally, admission-webhooks do not
# currently support the ability to have namespace-scoped RBAC permissions only.
  name: kubefed-admission-webhook:anonymous-auth

roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:kubefed:admission-requester

subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: system:anonymous
---
# Source: kubefed/charts/controllermanager/templates/clusterrolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
# For namespace scoped deployments, create a unique cluster-scoped resource
# name using the namespace. This is needed because admission-webhooks do not
# currently support the ability to have namespace-scoped RBAC permissions only.
  name: kubefed-admission-webhook:auth-delegator

roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: ${FED_NS}
---
# Source: kubefed/charts/controllermanager/templates/roles.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    api: kubefed
    kubebuilder.k8s.io: 1.0.0
  name: kubefed-config-role
  namespace: ${FED_NS}
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
# Source: kubefed/charts/controllermanager/templates/roles.yaml
# Only need access to these core namespaced resources in the KubeFed system
# namespace regardless of kubefed deployment scope.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    api: kubefed
    kubebuilder.k8s.io: 1.0.0
  name: kubefed-admission-webhook-role
  namespace: ${FED_NS}
rules:
- apiGroups:
  - core.kubefed.io
  resources:
  - federatedtypeconfigs
  - kubefedclusters
  - kubefedconfigs
  verbs:
  - get
  - watch
  - list
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
# Allow the admission webhook to read the config for terminating
# authentication.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
# TODO(font) For namespace scoped deployments, create a unique resource name in
# the kube-system namespace using the namespace. This is needed because
# admission-webhooks do not currently support the ability to have
# namespace-scoped RBAC permissions only.
  name: kubefed-admission-webhook:apiextension-viewer

  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: ${FED_NS}
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
# Grant admission webhook access to core.kubefed.io in the KubeFed system
# namespace only, regardless of kubefed deployment scope.
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-admission-webhook-rolebinding
  namespace: ${FED_NS}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-admission-webhook-role
subjects:
- kind: ServiceAccount
  name: kubefed-admission-webhook
  namespace: ${FED_NS}
---
# Source: kubefed/charts/controllermanager/templates/rolebindings.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubefed-config-rolebinding
  namespace: ${FED_NS}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubefed-config-role
subjects:
- kind: ServiceAccount
  name: kubefed-controller
  namespace: ${FED_NS}
---
# Source: kubefed/charts/controllermanager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubefed-controller-manager-metrics-service
  namespace: ${FED_NS}
  annotations:
    prometheus.io/port: "9090"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
spec:
  selector:
    kubefed-control-plane: "controller-manager"
  ports:
  - name: metrics
    port: 9090
    targetPort: metrics
---
# Source: kubefed/charts/controllermanager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubefed-admission-webhook
  namespace: ${FED_NS}
spec:
  selector:
    kubefed-admission-webhook: "true"
  ports:
  - port: 443
    targetPort: 8443
---
# Source: kubefed/charts/controllermanager/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${FED_NS}
  name: kubefed-admission-webhook
  labels:
    kubefed-admission-webhook: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      kubefed-admission-webhook: "true"
  template:
    metadata:
      labels:
        kubefed-admission-webhook: "true"
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccountName: kubefed-admission-webhook
      containers:
      - name: admission-webhook
        image: "quay.io/kubernetes-multicluster/kubefed:${FED_VER}"
        imagePullPolicy: "IfNotPresent"
        command:
        - "/hyperfed/webhook"
        - "--secure-port=8443"
        - "--audit-log-path=-"
        - "--tls-cert-file=/var/serving-cert/tls.crt"
        - "--tls-private-key-file=/var/serving-cert/tls.key"
        - "--v=8"
        ports:
        - containerPort: 8443
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubefed-admission-webhook-serving-cert
---
# Source: kubefed/charts/controllermanager/templates/deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubefed-controller-manager
  namespace: ${FED_NS}
  labels:
    kubefed-control-plane: controller-manager
spec:
  replicas: 2
  selector:
    matchLabels:
      kubefed-control-plane: controller-manager
  strategy: {}
  template:
    metadata:
      labels:
        kubefed-control-plane: controller-manager
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccountName: kubefed-controller
      containers:
      - command:
        - /hyperfed/controller-manager
        image: "quay.io/kubernetes-multicluster/kubefed:${FED_VER}"
        imagePullPolicy: "IfNotPresent"
        name: controller-manager
        ports:
        - containerPort: 9090
          name: metrics
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 3
        resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
            
      terminationGracePeriodSeconds: 10
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: services
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedService
    pluralName: federatedservices
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: Service
    pluralName: services
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: jobs.batch
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedJob
    pluralName: federatedjobs
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: batch
    kind: Job
    pluralName: jobs
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: namespaces
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedNamespace
    pluralName: federatednamespaces
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: Namespace
    pluralName: namespaces
    scope: Cluster
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: replicasets.apps
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedReplicaSet
    pluralName: federatedreplicasets
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: apps
    kind: ReplicaSet
    pluralName: replicasets
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: serviceaccounts
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedServiceAccount
    pluralName: federatedserviceaccounts
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: ServiceAccount
    pluralName: serviceaccounts
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: ingresses.extensions
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedIngress
    pluralName: federatedingresses
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: extensions
    kind: Ingress
    pluralName: ingresses
    scope: Namespaced
    version: v1beta1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: configmaps
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedConfigMap
    pluralName: federatedconfigmaps
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: ConfigMap
    pluralName: configmaps
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: secrets
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedSecret
    pluralName: federatedsecrets
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    kind: Secret
    pluralName: secrets
    scope: Namespaced
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: clusterroles.rbac.authorization.k8s.io
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedClusterRole
    pluralName: federatedclusterroles
    scope: Cluster
    version: v1beta1
  propagation: Enabled
  targetType:
    group: rbac.authorization.k8s.io
    kind: ClusterRole
    pluralName: clusterroles
    scope: Cluster
    version: v1
---
# Source: kubefed/templates/federatedtypeconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: FederatedTypeConfig
metadata:
  name: deployments.apps
  namespace: ${FED_NS}
spec:
  federatedType:
    group: types.kubefed.io
    kind: FederatedDeployment
    pluralName: federateddeployments
    scope: Namespaced
    version: v1beta1
  propagation: Enabled
  targetType:
    group: apps
    kind: Deployment
    pluralName: deployments
    scope: Namespaced
    version: v1
---
# Source: kubefed/charts/controllermanager/templates/kubefedconfig.yaml
apiVersion: core.kubefed.io/v1beta1
kind: KubeFedConfig
metadata:
  name: kubefed
  namespace: ${FED_NS}
spec:
  scope: "Cluster"
  controllerDuration:
    availableDelay: "20s"
    unavailableDelay: "60s"
  leaderElect:
    leaseDuration: "15s"
    renewDeadline: "10s"
    retryPeriod: "5s"
    resourceLock: "configmaps"
  clusterHealthCheck:
    period: "10s"
    failureThreshold: 3
    successThreshold: 1
    timeout: "3s"
  syncController:
    adoptResources: "Enabled"
  featureGates:
  - name: PushReconciler
    configuration: "Enabled"
  - name: SchedulerPreferences
    configuration: "Enabled"
  - name: CrossClusterServiceDiscovery
    configuration: "Enabled"
  - name: FederatedIngress
    configuration: "Enabled"
---
# Source: kubefed/charts/controllermanager/templates/webhook.yaml
# The same comments for ValidatingWebhookConfiguration apply here to
# MutatingWebhookConfiguration.
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: mutation.core.kubefed.io

webhooks:
- name: kubefedconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: "${FED_NS}"
      name: kubefed-admission-webhook
      path: /apis/mutation.core.kubefed.io/v1beta1/kubefedconfigs
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQU1YaHBjVlV5QlgyUVFZc2lyby9aUlF3RFFZSktvWklodmNOQVFFTEJRQXcKSnpFbE1DTUdBMVVFQXhNY2EzVmlaV1psWkMxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXkxallUQWVGdzB5TURBNApNVEF3T0RBMU1UVmFGdzB6TURBNE1EZ3dPREExTVRWYU1DY3hKVEFqQmdOVkJBTVRIR3QxWW1WbVpXUXRZV1J0CmFYTnphVzl1TFhkbFltaHZiMnN0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDODRzV0szemdYMXV3a1htWkJGZXJKYmVKa3E4L1Y4NjBxZU15K082TWdRSXVudWpja0dFRWhJcVZiTytSWQpuV0lDV1hWNEp4WVoyNUtidDVGMVJYQ1B1ZlRXTEFCN2pKeXJIeVlSeFJMUnNML1I4MFZXQ1F0TzUyS29DVERhCnJRTm84bnNJQnNIUnl6Z2RuM25WUVBXWitSV0t1VHZ6MWEwMFllV2k4QUVpeVNvL3RoUWZ3VDRvWnU4M0UydUQKYTBCdS9aZUpIRW0wanM5MkNDdWdRVHF6MitOUnBIODI0MjZJa3NUeEF5VWJIcG12MENJTzJ2Nms4SkQ0V01ROQpVbzJaeER4MlFQU25MWFMybVI3TDZkaTV1MDVsVEZubXd4Ukl5a0FTcGNqRnY1ZVNadlBJMzZFQ0g2RUR2MjE2CnhVSE0yRHBTRXMyWUl2eWUwcDVicUd5eEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlYKSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQWxoeHRlVFdvTldZNzAydm9nUnpJWktzRGZ3N0lHSndNMW1Idnh6RlV1akFEClB2SW5OTkFMdGxqb0t0RDJ2WkZsdGcvb2FxRXVUb2ZRK1l1bWpja0x5Sm1aR3RHNkwxZW9SUzVMeWZOMEYza0EKMUlZdjZHMXVCUzRhTExqaHZsNmFHTDdtc1JPSlhMc2xoMVo1cEt6bWpVcGFxazVvVjVZQStxMzh0K1NybWJmNQo5dXl0UTgwZ0d1Q2xoaGlMRHdBWU5MbzRUN0t3eEtoUm91Qnd2eU9OZWk2ODlZaSs4SFZEcHVrbFI5dVlhdmd2CnRBUlZGUUdEb2Z5Y25VWjJvUElYRGs2MHZLR0txdTRSZEJDdUswc3B4NDNDZmh0WkNMZHJ2TWFOZUM3WDJxTU4KNnVqVEVyK3dnYXdHa3huY2I1ajJsUmw1aGwwbE95NkN1UVVJc2hEVklBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  rules:
  - operations:
    - CREATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
---
# Source: kubefed/charts/controllermanager/templates/webhook.yaml
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
# For namespace scoped deployments, create a unique cluster-scoped resource
# using the namespace.
  name: validations.core.kubefed.io

webhooks:
- name: federatedtypeconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: "${FED_NS}"
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.io/v1beta1/federatedtypeconfigs
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQU1YaHBjVlV5QlgyUVFZc2lyby9aUlF3RFFZSktvWklodmNOQVFFTEJRQXcKSnpFbE1DTUdBMVVFQXhNY2EzVmlaV1psWkMxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXkxallUQWVGdzB5TURBNApNVEF3T0RBMU1UVmFGdzB6TURBNE1EZ3dPREExTVRWYU1DY3hKVEFqQmdOVkJBTVRIR3QxWW1WbVpXUXRZV1J0CmFYTnphVzl1TFhkbFltaHZiMnN0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDODRzV0szemdYMXV3a1htWkJGZXJKYmVKa3E4L1Y4NjBxZU15K082TWdRSXVudWpja0dFRWhJcVZiTytSWQpuV0lDV1hWNEp4WVoyNUtidDVGMVJYQ1B1ZlRXTEFCN2pKeXJIeVlSeFJMUnNML1I4MFZXQ1F0TzUyS29DVERhCnJRTm84bnNJQnNIUnl6Z2RuM25WUVBXWitSV0t1VHZ6MWEwMFllV2k4QUVpeVNvL3RoUWZ3VDRvWnU4M0UydUQKYTBCdS9aZUpIRW0wanM5MkNDdWdRVHF6MitOUnBIODI0MjZJa3NUeEF5VWJIcG12MENJTzJ2Nms4SkQ0V01ROQpVbzJaeER4MlFQU25MWFMybVI3TDZkaTV1MDVsVEZubXd4Ukl5a0FTcGNqRnY1ZVNadlBJMzZFQ0g2RUR2MjE2CnhVSE0yRHBTRXMyWUl2eWUwcDVicUd5eEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlYKSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQWxoeHRlVFdvTldZNzAydm9nUnpJWktzRGZ3N0lHSndNMW1Idnh6RlV1akFEClB2SW5OTkFMdGxqb0t0RDJ2WkZsdGcvb2FxRXVUb2ZRK1l1bWpja0x5Sm1aR3RHNkwxZW9SUzVMeWZOMEYza0EKMUlZdjZHMXVCUzRhTExqaHZsNmFHTDdtc1JPSlhMc2xoMVo1cEt6bWpVcGFxazVvVjVZQStxMzh0K1NybWJmNQo5dXl0UTgwZ0d1Q2xoaGlMRHdBWU5MbzRUN0t3eEtoUm91Qnd2eU9OZWk2ODlZaSs4SFZEcHVrbFI5dVlhdmd2CnRBUlZGUUdEb2Z5Y25VWjJvUElYRGs2MHZLR0txdTRSZEJDdUswc3B4NDNDZmh0WkNMZHJ2TWFOZUM3WDJxTU4KNnVqVEVyK3dnYXdHa3huY2I1ajJsUmw1aGwwbE95NkN1UVVJc2hEVklBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - federatedtypeconfigs
    - federatedtypeconfigs/status
  failurePolicy: Fail
- name: kubefedclusters.core.kubefed.io
  clientConfig:
    service:
      namespace: "${FED_NS}"
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.io/v1beta1/kubefedclusters
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQU1YaHBjVlV5QlgyUVFZc2lyby9aUlF3RFFZSktvWklodmNOQVFFTEJRQXcKSnpFbE1DTUdBMVVFQXhNY2EzVmlaV1psWkMxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXkxallUQWVGdzB5TURBNApNVEF3T0RBMU1UVmFGdzB6TURBNE1EZ3dPREExTVRWYU1DY3hKVEFqQmdOVkJBTVRIR3QxWW1WbVpXUXRZV1J0CmFYTnphVzl1TFhkbFltaHZiMnN0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDODRzV0szemdYMXV3a1htWkJGZXJKYmVKa3E4L1Y4NjBxZU15K082TWdRSXVudWpja0dFRWhJcVZiTytSWQpuV0lDV1hWNEp4WVoyNUtidDVGMVJYQ1B1ZlRXTEFCN2pKeXJIeVlSeFJMUnNML1I4MFZXQ1F0TzUyS29DVERhCnJRTm84bnNJQnNIUnl6Z2RuM25WUVBXWitSV0t1VHZ6MWEwMFllV2k4QUVpeVNvL3RoUWZ3VDRvWnU4M0UydUQKYTBCdS9aZUpIRW0wanM5MkNDdWdRVHF6MitOUnBIODI0MjZJa3NUeEF5VWJIcG12MENJTzJ2Nms4SkQ0V01ROQpVbzJaeER4MlFQU25MWFMybVI3TDZkaTV1MDVsVEZubXd4Ukl5a0FTcGNqRnY1ZVNadlBJMzZFQ0g2RUR2MjE2CnhVSE0yRHBTRXMyWUl2eWUwcDVicUd5eEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlYKSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQWxoeHRlVFdvTldZNzAydm9nUnpJWktzRGZ3N0lHSndNMW1Idnh6RlV1akFEClB2SW5OTkFMdGxqb0t0RDJ2WkZsdGcvb2FxRXVUb2ZRK1l1bWpja0x5Sm1aR3RHNkwxZW9SUzVMeWZOMEYza0EKMUlZdjZHMXVCUzRhTExqaHZsNmFHTDdtc1JPSlhMc2xoMVo1cEt6bWpVcGFxazVvVjVZQStxMzh0K1NybWJmNQo5dXl0UTgwZ0d1Q2xoaGlMRHdBWU5MbzRUN0t3eEtoUm91Qnd2eU9OZWk2ODlZaSs4SFZEcHVrbFI5dVlhdmd2CnRBUlZGUUdEb2Z5Y25VWjJvUElYRGs2MHZLR0txdTRSZEJDdUswc3B4NDNDZmh0WkNMZHJ2TWFOZUM3WDJxTU4KNnVqVEVyK3dnYXdHa3huY2I1ajJsUmw1aGwwbE95NkN1UVVJc2hEVklBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedclusters
    - kubefedclusters/status
  failurePolicy: Fail
- name: kubefedconfigs.core.kubefed.io
  clientConfig:
    service:
      namespace: "${FED_NS}"
      name: kubefed-admission-webhook
      path: /apis/validation.core.kubefed.io/v1beta1/kubefedconfigs
    caBundle: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQWdPZ0F3SUJBZ0lSQU1YaHBjVlV5QlgyUVFZc2lyby9aUlF3RFFZSktvWklodmNOQVFFTEJRQXcKSnpFbE1DTUdBMVVFQXhNY2EzVmlaV1psWkMxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXkxallUQWVGdzB5TURBNApNVEF3T0RBMU1UVmFGdzB6TURBNE1EZ3dPREExTVRWYU1DY3hKVEFqQmdOVkJBTVRIR3QxWW1WbVpXUXRZV1J0CmFYTnphVzl1TFhkbFltaHZiMnN0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDODRzV0szemdYMXV3a1htWkJGZXJKYmVKa3E4L1Y4NjBxZU15K082TWdRSXVudWpja0dFRWhJcVZiTytSWQpuV0lDV1hWNEp4WVoyNUtidDVGMVJYQ1B1ZlRXTEFCN2pKeXJIeVlSeFJMUnNML1I4MFZXQ1F0TzUyS29DVERhCnJRTm84bnNJQnNIUnl6Z2RuM25WUVBXWitSV0t1VHZ6MWEwMFllV2k4QUVpeVNvL3RoUWZ3VDRvWnU4M0UydUQKYTBCdS9aZUpIRW0wanM5MkNDdWdRVHF6MitOUnBIODI0MjZJa3NUeEF5VWJIcG12MENJTzJ2Nms4SkQ0V01ROQpVbzJaeER4MlFQU25MWFMybVI3TDZkaTV1MDVsVEZubXd4Ukl5a0FTcGNqRnY1ZVNadlBJMzZFQ0g2RUR2MjE2CnhVSE0yRHBTRXMyWUl2eWUwcDVicUd5eEFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlYKSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQWxoeHRlVFdvTldZNzAydm9nUnpJWktzRGZ3N0lHSndNMW1Idnh6RlV1akFEClB2SW5OTkFMdGxqb0t0RDJ2WkZsdGcvb2FxRXVUb2ZRK1l1bWpja0x5Sm1aR3RHNkwxZW9SUzVMeWZOMEYza0EKMUlZdjZHMXVCUzRhTExqaHZsNmFHTDdtc1JPSlhMc2xoMVo1cEt6bWpVcGFxazVvVjVZQStxMzh0K1NybWJmNQo5dXl0UTgwZ0d1Q2xoaGlMRHdBWU5MbzRUN0t3eEtoUm91Qnd2eU9OZWk2ODlZaSs4SFZEcHVrbFI5dVlhdmd2CnRBUlZGUUdEb2Z5Y25VWjJvUElYRGs2MHZLR0txdTRSZEJDdUswc3B4NDNDZmh0WkNMZHJ2TWFOZUM3WDJxTU4KNnVqVEVyK3dnYXdHa3huY2I1ajJsUmw1aGwwbE95NkN1UVVJc2hEVklBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
  rules:
  - operations:
    - CREATE
    - UPDATE
    apiGroups:
    - core.kubefed.io
    apiVersions:
    - v1beta1
    resources:
    - kubefedconfigs
  failurePolicy: Fail
